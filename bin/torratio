#!/usr/bin/env python3

##
## To-Do:
##   - Config File Args (-c/--config-filename)
##

if __name__ == "__main__":
	import argparse, ipaddress, logging, re
	import torratio

	class ListenAddr:
		def __iter__(_):
			return iter(("<ip-addr-v4>", "<hostname>"))
		def __contains__(_, address):
			try:
				return bool(ipaddress.IPv4Address(address))
			except ValueError:
				return bool(re.match(r"^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$", address))

	class ListenPort:
		def __iter__(_):
			return iter((f"0-{2**16-1}", ))
		def __contains__(_, port):
			return port in range(2**16)

	parser = argparse.ArgumentParser()
	
	parser.set_defaults(_func = torratio.daemon, _args = (
		parser.add_argument("-a", "--listen-address", default = torratio.DEFAULTS.listen_address, choices = ListenAddr()).dest,
		parser.add_argument("-p", "--listen-port", default = torratio.DEFAULTS.listen_port, type = int, choices = ListenPort()).dest,
		parser.add_argument("--log-level", default = torratio.DEFAULTS.log_level, type = logging._nameToLevel.get, choices = logging._nameToLevel.keys()).dest,
		parser.add_argument("--log-filename", default = torratio.DEFAULTS.log_filename).dest,
	))

	args = parser.parse_args()
	args._func(**{ k: v for k, v in vars(args).items() if k in args._args })
